'use strict';

//******************************************************************************/
// Задача
// Создайте функцию, которая будет на вход принимать 1 аргумент с именем человека и возвращать строку.
// Пример: вызов функции sayHello('Антон') возвращает строку "Привет, Антон!". 

function sayHello(name) {
    return "Привет, " + name;
}

//******************************************************************************/
// Задача
// Создайте функцию, которая принимает в себя 1 аргумент в виде целого числа и возвращает массив из трех чисел: одно на 1 меньше, сам аргумент, и число на 1 больше.
// Пример: вызов функции returnNeighboringNumbers(5) возвращает массив в виде [4, 5, 6].

function returnNeighboringNumbers(num) {
    return [num - 1, num, num + 1];
}

//******************************************************************************/
// Задача
// Создайте функцию, которая будет принимать в себя 2 аргумента, оба числа. Первое число - это база, второе число - это сколько раз нужно будет повторить это число в прогрессии. (Смотри пример ниже). Функция должна возвращать строку (или число в особых случаях, о которых ниже), где эти числа идут по порядку, разделенные тремя дефисами "---". После последнего числа их не должно быть.
// Если второй аргумент не является числом, равен или меньше нуля - то возвращать просто первый аргумент. (Проверяем через оператор typeof)
// Вызов функции getMathResult(5, 3) даст ответ 5---10---15

function getMathResult(num, repeat) {
    if (repeat <= 1 || typeof(repeat) != "number") return num;
    let result = "";
    for(let i = 1; i <= repeat; i++){
        result += num * i;
        if(i != repeat) result += "---";
    }
    return result;
}

//******************************************************************************/
// Задача
// Создайте функцию, которая будет вычислять объем и площадь полной поверхности куба (тоже базовая математика, иногда используется в создании анимаций). Эта функция принимает в себя целое число со значением длины ребра куба. Ответ выведите в формате строки, который изображен в примерах.
// Если в функцию попал неправильный аргумент или вычислить значения невозможно - вернуть строку "При вычислении произошла ошибка"

function calculateVolumeAndArea(edge) {
    if(typeof(edge) != "number" || edge < 1 || (edge % 1 != 0)){
        return "При вычислении произошла ошибка";
    }
    const v = edge * edge * edge;
    const s = 6 * (edge * edge);
    return `Объем куба: ${v}, площадь всей поверхности: ${s}`;
}

//******************************************************************************/
// Задача
// Напишите функцию, которая будет определять номер купе по переданному ей номеру места.
// Функция принимает только целое число от 1 до 36.
// Если переданный аргумент не число, отрицательное или дробное - возвращается сообщение:
// "Ошибка. Проверьте правильность введенного номера места"
// Если число 0 или больше 36, то сообщение: "Таких мест в вагоне не существует"

function getCoupeNumber(placeNumbers) {
    if(typeof(placeNumbers) != "number" || placeNumbers < 0 || (placeNumbers % 1 != 0)){
        return "Ошибка. Проверьте правильность введенного номера места";
    } else if (placeNumbers === 0 || placeNumbers > 36){
        return "Таких мест в вагоне не существует";
    } else {
        return Math.ceil(placeNumbers / 4);
    }
}

//******************************************************************************/
// Задача
// Создайте функцию, которая принимает в себя целое число минут и возвращает время в нужном формате строки. (Смотри пример). Обратите внимание на окончание слова "час" - оно меняется в зависимости от цифры. Если вместо аргумента приходит не число, дробное или отрицательное число - функция возвращает строку "Ошибка, проверьте данные"
//getTimeFromMinutes(150) => "Это 2 часа и 30 минут"

function getTimeFromMinutes(num) {
    if(typeof(num) != "number" || num < 0 || (num % 1 != 0)){
        return "Ошибка, проверьте данные";}        
    let hours = Math.ceil(num / 60) - 1;
    if (hours == -1) hours = 0;
    if (num == 60) hours = 1;
    const minutes = num % 60 ;
    let horusText = ""
    if(hours == 1){
        horusText = "час";
    } else if(hours == 2 || hours == 3 || hours == 4 ){
        horusText = "часа";
    } else {
        horusText = "часов";
    }
    return `Это ${hours} ${horusText} и ${minutes} минут`
}

//******************************************************************************/
// Задача
// Напишите функцию, которая принимает в себя 4 числа и возвращает самое большее из них. Если один из аргументов не является числом или их меньше 4 - возвращается 0. Дробные числа разрешены.

function findMaxNumber(a, b, c, d) {
    if(typeof(a) != "number" || typeof(b) != "number" || 
    typeof(c) != "number" || typeof(d) != "number") return 0;
    return Math.max(a, b, c, d);
}

//******************************************************************************/
// Задача
// Создайте функцию, которая будет принимать в себя один аргумент-целое положительное число. Она должна возвращать строку, в которой будут через пробел выведены числа Фибоначчи. Причем, их количество должно быть равно переданному аргументу.
// Если переданный аргумент не число - вернуть пустую строку. Решать без применения рекурсии.

function fib(a) {
    if(typeof(a) != "number"  || a <= 0 || !Number.isInteger(a)) return "";
    if(a == 1) return "0"
    let result = "0 1";
    let n1 = 0;
    let n2 = 1;
    for(let i = 2; i < a; i++){
        let prom = n1 + n2;
        result += (" " + prom);
        n1 = n2;
        n2 = prom;
    }
    
    console.log(result);
    return result;
}


